<snippet>
	<content><![CDATA[
/* GREEN UNIVERSITY OF BANGLADESH
       Md DinIslam, Batch-221
*/
#include <bits/stdc++.h>
// #include <ext/pb_ds/assoc_container.hpp>
// #include <ext/pb_ds/tree_policy.hpp>
using namespace std;
// using namespace __gnu_pbds;

// Aliases
using ll = long long;
using lld = long double;
using ull = unsigned long long;

// TypeDEf
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<pll> vpll;
typedef vector<string> vs;
typedef vector<vll> mat;
typedef unordered_map<ll, ll> umpll;
typedef unordered_map<int, int> umpi;
typedef map<ll, ll> mpll;
// typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> oset;

// Macros
#define prf(x) printf("%d\n", x)
#define pfl(x) printf("%lld\n", x)
#define sc(x) scanf("%d", &x)
#define scl(x) scanf("%lld", &x)
#define scf(x) scanf("%lf", &x)
#define rep(i, n) for (int i = 0; i < n; i++)
#define rep2(i, a, n) for (int i = a; i <= n; i++)
#define rfl(i, m, n) for (int i = n; i >= m; i--)
#define ff first
#define ss second
#define pb push_back
#define pp pop_back
#define mp make_pair
#define py cout << "YES\n";
#define pm cout << "-1\n";
#define pn cout << "NO\n";
#define pf cout << "FIRST\n";
#define nn cout << '\n';
#define bitcount __builtin_popcountll
#define endl '\n'
#define arr array
#define all(v) v.begin(), v.end()
#define rall(v) v.end(), v.begin()
#define sz(x) int(x.size())

// Debug..
#ifdef LOCAL
#include "debug2.h"
#else
#define dg(x...)
#endif

// Constants
const lld PI = 3.141592653589793238;
const ll INF = 1e18 + 9;
const ll mod = 1e9 + 7;

// R, D, L, U......
int dx[4] = { 0, 1, 0, -1};
int dy[4] = {1, 0, -1, 0};

void Din() {
    $1
}

// Main
int main() {
    ios_base :: sync_with_stdio(0), cin.tie(0);
    ll t = 1;
    // cin >> t;
    for(int i = 1;i <= t; ++i) { //Kickstart
        // cout << "Case " << i << ": "; Din();
        Din();
    }
    return 0;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>CP template</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
